name: Promote ReleaseCandidate
description: Promote a release candidate
inputs:
  K8S_REPO:
    description: repo of the k8s config
    required: true
  IS_PRERELEASE:
    description: defines if prerelease
    default: "true"
  API_GITHUB_TOKEN:
    description: Github token for the k8s repo
    required: true
  RELEASE_FILE:
    description: path of the release file to update the version
    required: true
  GITHUB_TOKEN:
    description: repo github token
    required: true
runs:
  using: composite
  steps:
    - name: Install GitVersion
      uses: gittools/actions/gitversion/setup@v0.9.7
      with:
        versionSpec: "5.x"
    - name: Set Version
      shell: bash
      run: |
        dotnet-gitversion -output buildserver -verbosity Quiet
        echo "Verison:"
        cat $GITHUB_ENV
    - uses: actions/checkout@v2
      with:
        repository: ${{ inputs.K8S_REPO }}
        path: k8s
        token: ${{ inputs.API_GITHUB_TOKEN }}

    - name: Commit Version and create Pullrequest (Flux)
      working-directory: k8s
      shell: bash
      env:
        GH_TOKEN: ${{ inputs.API_GITHUB_TOKEN }}
        RELEASE_FILE: ${{ inputs.RELEASE_FILE }}
      run: |
        VERSION=$GitVersion_SemVer
        if [[ "${{ inputs.IS_PRERELEASE}}" != "true" ]]; then
          VERSION=$GitVersion_MajorMinorPatch
        fi
        git config user.email deployment@tqgg.de
        git config user.name deployment-bot
        git checkout -b release/$VERSION
        sed -i "s/\(.*\):.*#\[version\]/\1: $VERSION #[version]/" $RELEASE_FILE
        git add .
        git commit -m "Release: $VERSION"
        git push --set-upstream origin release/$VERSION
        gh pr create --title "[Release] Deployment: $VERSION" --body "[Release] Deployment: $VERSION"
        echo "VERSION=$VERSION" >> $GITHUB_ENV

    - name: release
      uses: actions/create-release@v1
      id: create_release
      env:
        GITHUB_TOKEN: ${{ inputs.GITHUB_TOKEN }}
      with:
        draft: false
        prerelease: ${{ inputs.IS_PRERELEASE }}
        release_name: ${{ env.VERSION }}
        tag_name: ${{ env.VERSION }}
        body_path: readme.md
